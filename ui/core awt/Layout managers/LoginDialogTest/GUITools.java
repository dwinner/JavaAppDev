
import java.awt.Dimension;
import java.awt.Insets;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JTextField;

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è UI
 * <p/>
 * @author dwinner@inbox.ru
 */
public class GUITools
{
    private GUITools()
    {
    }

    /**
     * –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Å—ã–ª–æ–∫ –Ω–∞ –∫–Ω–æ–ø–∫–∏ JButton –∏
     * –ø—Ä–∏–¥–∞–µ—Ç –∏–º –Ω—É–∂–Ω—ã–π –æ—Ç—Å—Ç—É–ø –æ—Ç –≥—Ä–∞–Ω–∏—Ü —Å–ª–µ–≤–∞ –∏ —Å–ø—Ä–∞–≤–∞
     * <p/>
     * @param buttons –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫
     */
    public static void createRecommendedMargin(JButton[] buttons)
    {
        for (JButton aButton : buttons)
        {
            Insets margin = aButton.getMargin();
            margin.left = 12;   // TODO: –í—ã–Ω–µ—Å—Ç–∏ –≤ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ MetalPlafEnum
            margin.right = 12;  // TODO: –í—ã–Ω–µ—Å—Ç–∏ –≤ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ MetalPlafEnum
            aButton.setMargin(margin);
        }
    }

    /**
     * –ú–µ—Ç–æ–¥ –ø—Ä–∏–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö
     * —Ä–∞–∑–º–µ—Ä–æ–≤, (—Ç.–µ. –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö, –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã—Ö –∏
     * –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö). –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏–Ω–∏–º–∞—é—Ç —Ä–∞–∑–º–µ—Ä —Å–∞–º–æ–≥–æ
     * –±–æ–ª—å—à–æ–≥–æ (–ø–æ —à–∏—Ä–∏–Ω–µ) –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –≥—Ä—É–ø–ø–µ
     * <p/>
     * @param components –ù–∞–±–æ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
     */
    public static void makeSameSize(JComponent[] components)
    {
        // –ü–æ–ª—É—á–µ–Ω–∏–µ —à–∏—Ä–∏–Ω—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        int[] sizes = new int[components.length];
        for (int i = 0; i < sizes.length; i ++)
        {
            sizes[i] = components[i].getPreferredSize().width;
        }
        // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
        int maxSizePos = maximumElementPosition(sizes);
        Dimension maxSize = components[maxSizePos].getPreferredSize();
        // –ü—Ä–∏–¥–∞–Ω–∏–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤
        for (int i = 0; i < components.length; i ++)
        {
            components[i].setPreferredSize(maxSize);
            components[i].setMaximumSize(maxSize);
            components[i].setMinimumSize(maxSize);
        }
    }

    /**
     * –ú–µ—Ç–æ–¥, –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É—é—â–∏–π –≤—ã—Å–æ—Ç—É —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
     * <p/>
     * @param field –û–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ
     */
    public static void fixTextFieldSize(JTextField field)
    {
        Dimension size = field.getPreferredSize();
        // –ß—Ç–æ–±—ã —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É –º–æ–≥–ª–æ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å —Å–≤–æ–π
        // —Ä–∞–∑–º–µ—Ä –≤ –¥–ª–∏–Ω—É
        size.width = field.getMaximumSize().width;
        // –¢–µ–ø–µ—Ä—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –Ω–µ —Å—Ç–∞–Ω–µ—Ç –≤—ã—à–µ —Å–≤–æ–µ–π –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –≤—ã—Å–æ—Ç—ã
        field.setMaximumSize(size);
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
     * –º–∞—Å—Å–∏–≤–∞
     * <p/>
     * @param sizes –?—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ –ø–æ–∑–∏—Ü–∏–π
     * <p/>
     * @return –ü–æ–∑–∏—Ü–∏—è (–∏–Ω–¥–µ–∫—Å) –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
     */
    private static int maximumElementPosition(int[] sizes)
    {
        int maxPos = 0;
        for (int i = 1; i < sizes.length; i ++)
        {
            if (sizes[i] > sizes[maxPos])
            {
                maxPos = i;
            }
        }

        return maxPos;
    }

}
