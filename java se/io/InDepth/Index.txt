    Система ввода/вывода в деталях.

1) Вывод списка каталогов с использованием регулярных выражений;

2) Использование класса File для создания каталогов
   и выполнения операций с файлами;
   
3) Буферизованный ввод;

4) Форматированный ввод;

5) Проверка достижения конца файла одновременно
   с чтением из него по байту;
   
6) Буферизованный вывод файла;

7) Упрощение операций вывода в PrintWriter;

8) Сохранение и восстановление данных;

9) Произвольный доступ к файлам;

10) Статические функции для построчного считывания и записи;

11) Чтение из стандартного ввода;

12) Преобразование System.out в символьный поток PrintWriter;

13) Перенаправление стандартного ввода/вывода;

14) Получение каналов из потоков;

15) Копирование файла с использованием каналов и буферов;

16) Использование метода transferTo() для соединения каналов;

17) Получение текста из буфера ByteBuffers и обратно;

18) Перечисление доступных для ОС кодировок и их символических имен;

19) Получение различных данных из буфера ByteBuffer;

20) Работа с целыми числами в буфере ByteBuffer;

21) Способы представления ByteBuffer;

22) Endian различия в хранении данных;

23) Использование методов ByteBuffer;

24) Создание очень большого файла, отображаемого в память;

25) Тестирование производительности отображаемых в память механизмов;

26) Простой пример блокировки файлов;

27) Блокирование части отображаемого файла;

28) Простой пример сжатия данных;

29) Использование формата ZIP для сжатия;

30) Тест сериализации объектов;

31) Создание файла с данными сериализации, возможные ошибки;

32) Проблемная реализация интерфейса Externalizable;

33) Восстановление объекта Externalizable;

34) Ключевое слово "transient";

35) Управление сериализацией с определением собственных
    методов writeObject() и readObject();
    
36) Возможные проблемы долговременного хранения сериализованных объектов;

37) Сохранение состояния сложных систем объектов,
    сериализация статических полей;
    
38) Файлы предпочтений;