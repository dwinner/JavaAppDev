package ru.aztpa.a.oaa.mfg.shiftjob.v03;

import javax.jws.WebService;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.BindingType;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

/**
 * This class was generated by the JAX-WS RI. Oracle JAX-WS 2.1.5 Generated source version: 2.1
 * <p/>
 */
@WebService(portName = "ShiftJobPortSOAP",
            serviceName = "ShiftJob",
            targetNamespace = "http://www.aztpa.ru/a/oaa/mfg/shiftjob/v03/",
            // wsdlLocation = "/wsdls/A_OAA_MFG_ShiftJob_v03.wsdl",
            endpointInterface = "ru.aztpa.a.oaa.mfg.shiftjob.v03.ShiftJobPortType")
@BindingType("http://schemas.xmlsoap.org/wsdl/soap/http")
public class ShiftJob_ShiftJobPortSOAPImpl implements ShiftJobPortType
{
    private CalledWrapper calledObject;

    public ShiftJob_ShiftJobPortSOAPImpl()
    {
        calledObject = new CalledWrapper();
    }

    @Override
    public List<WorkSheetSummary> findWorkSheetListByProfile(
       String workSheetNum,
       String department,
       Integer shiftNum,
       XMLGregorianCalendar afterDate,
       XMLGregorianCalendar beforeDate,
       String employeeTabNum,
       String employeeLastName)
    {
        try
        {
            List<WorkSheetSummary> theWorkSheetSummary =
               calledObject.doFindWorkSheetListByProfile(
                  workSheetNum,
                  department,
                  shiftNum,
                  afterDate,
                  beforeDate,
                  employeeTabNum,
                  employeeLastName);

            return theWorkSheetSummary;
        }
        catch (SQLException sqlEx)
        {
            throw new RuntimeException(sqlEx);
        }
    }

    /**
     * @param workSheetId <p/>
     * @return returns ru.aztpa.a.oaa.mfg.shiftjob.v03.WorkSheetDetail
     */
    @Override
    public WorkSheetDetail getWorkSheetDetailById(long workSheetId)
    {
        try
        {
            return calledObject.doGetWorkSheetDetailById(workSheetId);
        }
        catch (SQLException sqlEx)
        {
            throw new RuntimeException(sqlEx);
        }
    }

    @Override
    public ActionResult updateQuantity(
       long workSheetId,
       int lineNum,
       Double acceptedQnt,
       Double wasteQnt)
    {
        try
        {
            return calledObject.doUpdateQuantity(
               workSheetId,
               lineNum,
               acceptedQnt,
               wasteQnt);
        }
        catch (SQLException sqlEx)
        {
            return new ActionResult();
        }
    }

    @Override
    public List<ShiftJobSummary> findShiftJobListByProfile(
       String departament,
       XMLGregorianCalendar dateAfter,
       XMLGregorianCalendar dateBefore,
       String shiftJobNum,
       String shiftNum)
    {
        try
        {
            return calledObject.doFindShiftJobListByProfile(
               departament,
               dateAfter,
               dateBefore,
               shiftJobNum,
               shiftNum);
        }
        catch (SQLException sqlEx)
        {
            return new ArrayList<ShiftJobSummary>();
        }
    }

    /**
     * @param shiftJobNum <p/>
     * @return returns ru.aztpa.a.oaa.mfg.shiftjob.v03.ShiftJob
     */
    @Override
    public ShiftJob getShiftJobDetailByNum(String shiftJobNum)
    {
        try
        {
            return calledObject.doGetShiftJobDetailByNum(shiftJobNum);
        }
        catch (SQLException sqlEx)
        {
            return new ShiftJob();
        }
    }

    @Override
    public ShiftDetail getShiftDetailByShift(Shift shift)
    {
        try
        {
            return calledObject.doGetShiftDetailByShift(shift);
        }
        catch (SQLException sqlEx)
        {
            return new ShiftDetail();
        }
    }
}
