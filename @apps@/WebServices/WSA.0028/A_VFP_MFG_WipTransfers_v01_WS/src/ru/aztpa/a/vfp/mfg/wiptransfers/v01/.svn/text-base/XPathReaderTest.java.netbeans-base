package ru.aztpa.a.vfp.mfg.wiptransfers.v01;

import java.io.IOException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 *
 * @author oracle_pr1
 */
public class XPathReaderTest
{
   public static void main(String[] args)
   {
      try
      {
         DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
         DocumentBuilder builder = factory.newDocumentBuilder();
         Document xmlDocument =
           builder.parse(XPathReaderTest.class.getResource("TablePathConfig.xml").toExternalForm());

         String firstDep = "0800";
         String eightDep = "0100";

         XPath path = XPathFactory.newInstance().newXPath();
         NodeList nodes =
           (NodeList) path.evaluate("/root/configuration/path", xmlDocument, XPathConstants.NODESET);

         for (int i = 0; i < nodes.getLength(); i++)
         {
            String textContent = nodes.item(i).getTextContent();
            StringTokenizer tokenizer = new StringTokenizer(textContent);  // FIXME: Лишнее создание объекта
            String depCode = (String) tokenizer.nextElement();
            String depPath = (String) tokenizer.nextElement();
            System.out.println(depCode + ":\t" + depPath);
         }
      }
      catch (ParserConfigurationException ex)
      {
         Logger.getLogger(XPathReaderTest.class.getName()).log(Level.SEVERE, null, ex);
      }
      catch (XPathExpressionException xpathEx)
      {
         Logger.getLogger(XPathReaderTest.class.getName()).log(Level.SEVERE, null, xpathEx);
      }
      catch (SAXException saxEx)
      {
         Logger.getLogger(XPathReaderTest.class.getName()).log(Level.SEVERE, null, saxEx);
      }
      catch (IOException ioEx)
      {
         Logger.getLogger(XPathReaderTest.class.getName()).log(Level.SEVERE, null, ioEx);
      }
   }
}
